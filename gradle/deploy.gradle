apply plugin: 'com.jfrog.bintray'

bintray {
  user = System.env['BINTRAY_USER'] ?: (project.hasProperty('bintrayUsername') ? project.bintrayUsername : '')
  key = System.env['BINTRAY_KEY'] ?: (project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : '')
  if (project.name.endsWith('-distribution')) {
    // NOTE ignore warning that install task does not exist; the plugin is looking for the wrong task!!
    configurations = ['archives']
    // FIXME asc for distribution zip doesn't get added by nebula-sign
    // NOTE it is added by normal signing plugin, but .asc extension replaces the archive extension instead of being appended to it
    filesSpec {
      def distsDir = "${project.buildDir}/${project.distsDirName}"
      // ideally, this is: from project.tasks.signJars.getSignatureFiles()
      // FIXME WTF??? <flips table>
      // NOTE we have to plant a placeholder so filesSpec resolves the location of the signature file during the initialization phase
      file(distsDir).mkdirs()
      // QUESTION can we use the archivePath property of the distPath to get this location?
      file("$distsDir/${project(':logstashj').name}-${project.version}-bin.zip.asc").createNewFile()
      from(distsDir) { include '*.asc' }
      into "${project.group.replace('.', '/')}/${project(':logstashj').name}/${project.version}"
    }
  }
  else {
    publications = ['mavenNebula']
  }
  dryRun = project.hasProperty('dryRun') && project.dryRun.toBoolean()
  publish = project.statusIsRelease

  pkg {
    repo = System.env['BINTRAY_REPO'] ?: (project.hasProperty('bintrayRepo') ? project.bintrayRepo : 'maven')
    if (!project.hasProperty('bintrayPersonal') || !project.bintrayPrivate.toBoolean()) {
      userOrg = 'logstash'
    }

    if (project.name.endsWith('-distribution')) {
      name = project(':logstashj').name
      desc = project(':logstashj').description
    }
    else {
      name = project.name
      desc = project.description
    }

    // NOTE use this instead if we want to list all artifacts under the same package
    //name = project(':logstashj').name
    //desc = project(':logstashj').description

    licenses = ['MIT']
    labels = ['logstash', 'logstashj']
    issueTrackerUrl = 'https://github.com/yuzutech/logstashj/issues'
    vcsUrl = 'https://github.com/yuzutech/logstashj'
    publicDownloadNumbers = true

    version {
      name = project.version
      // NOTE customize the vcsTag if you're only releasing a subproject
      vcsTag = "${rootProject.name}-${rootProject.version}"
      //released = "$buildDateOnly"
      // desc = ...
    }
  }
}

bintrayUpload.dependsOn preparePublish
